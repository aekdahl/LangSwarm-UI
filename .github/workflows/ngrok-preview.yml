name: Ngrok Preview Deployment

on:
  workflow_dispatch: # Allow manual trigger
    inputs:
      branch:
        description: "Branch to build from"
        required: true
        default: "main"

jobs:
  build-and-preview:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the specified branch
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Generate package-lock.json
      - name: Install Dependencies and Generate Lockfile
        run: npm install

      # Step 4: Commit package-lock.json (if not already present)
      - name: Commit package-lock.json
        if: success() && github.event.inputs.branch == 'main'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package-lock.json
          git commit -m "Add/Update package-lock.json file [CI]"
          git push origin ${{ github.event.inputs.branch }}

      # Step 5: Build React app
      - name: Build React App
        run: npm run build

      # Step 6: Start a local server to serve the React app
      - name: Start Local Server
        run: |
          npm install -g serve
          serve -s dist -l 5000 &
        env:
          NODE_ENV: production

      # Step 7: Install Ngrok and Expose Local Server
      - name: Install and Run Ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list >/dev/null
          sudo apt update && sudo apt install ngrok
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          ngrok http 5000 > ngrok.log &
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      # Step 8: Display the Ngrok Public URL
      - name: Show Ngrok URL
        run: |
          sleep 5 # Allow Ngrok to initialize
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'
