name: Build and Release React App

on:
  workflow_dispatch: # Allow manual trigger
    inputs:
      build:
        description: "Build name"
        required: true
        default: "frontend-build.zip"
      version:
        description: "Version"
        required: true
        default: "v0.0.0"
      prerelease:
        description: "Prerelease?"
        default: "true" # Dropdown selection mimics boolean
        type: choice
        options:
          - "false"
          - "true"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      # Ensure Dependencies Are Installed
      - name: Ensure Dependencies Are Installed
        run: |
          if ! npm list @vitejs/plugin-react > /dev/null 2>&1; then
            echo "Installing @vitejs/plugin-react..."
            npm install @vitejs/plugin-react --save-dev
          fi
          if ! npm list react-router-dom > /dev/null 2>&1; then
            echo "Installing react-router-dom..."
            npm install react-router-dom --save-dev
          fi
          if ! npm list styled-components > /dev/null 2>&1; then
            echo "Installing styled-components..."
            npm install styled-components --save-dev
          fi
          if ! npm list react-markdown > /dev/null 2>&1; then
            echo "Installing react-markdown..."
            npm install react-markdown --save-dev
          fi
          if ! npm list react-syntax-highlighter > /dev/null 2>&1; then
            echo "Installing react-syntax-highlighter..."
            npm install react-syntax-highlighter --save-dev
          fi
          if ! npm list remark-gfm > /dev/null 2>&1; then
            echo "Installing remark-gfm..."
            npm install remark-gfm --save-dev
          fi
          if ! npm list react-icons > /dev/null 2>&1; then
            echo "Installing react-icons..."
            npm install react-icons --save-dev
          fi
          if [ ! -f package-lock.json ]; then
            echo "Running npm install to generate lock file..."
            npm install
          else
            echo "Using npm ci for dependency installation..."
            npm install
          fi

      - name: Build React App
        run: npm run build

      # Step 5: Clean and Zip the build
      - name: Zip Build Artifact
        run: |
          rm -rf artifact && mkdir artifact
          cd dist
          zip -r ../artifact/${{ inputs.build }} ./*
      
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.version }}
          name: ${{ inputs.version }}
          body: |
            ðŸš€ New release for version ${{ inputs.version }}.          
          draft: false
          prerelease: ${{ inputs.prerelease }}
  
      - name: Upload Zipped Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifact/${{ inputs.build }}
          asset_name: ${{ inputs.build }}
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List Files for Debugging
        run: |
          echo "Current working directory:"
          pwd
          echo "Listing all files and folders:"
          ls -R
          
      - name: List Uploaded Artifacts
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts
