name: Build and Release React App

on:
  workflow_dispatch: # Allow manual trigger
    inputs:
      build:
        description: "Build name"
        required: true
        default: "frontend-build.zip"
      version:
        description: "Version"
        required: true
        default: "v0.0.0"
      prerelease:
        description: "Prerelease?"
        default: "true" # Dropdown selection mimics boolean
        type: choice
        options:
          - "false"
          - "true"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      # Ensure Dependencies Are Installed
      - name: Ensure Dependencies Are Installed
        run: |
          if ! npm list @vitejs/plugin-react > /dev/null 2>&1; then
            echo "Installing @vitejs/plugin-react..."
            npm install @vitejs/plugin-react --save-dev
          fi
          if ! npm list react-router-dom > /dev/null 2>&1; then
            echo "Installing react-router-dom..."
            npm install react-router-dom --save-dev
          fi
          if [ ! -f package-lock.json ]; then
            echo "Running npm install to generate lock file..."
            npm install
          else
            echo "Using npm ci for dependency installation..."
            npm install
          fi

      - name: Build React App
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: ${{ inputs.build }}
          path: dist/*

      - name: List Uploaded Artifacts
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: List Uploaded Artifacts
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts

      #- name: Download Build Artifact
      #  uses: actions/download-artifact@v4.1.8
      #  with:
      #    name: ${{ inputs.build }}
      #    path: .

      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v7
        with:
          # Artifact name (download all artifacts if not specified)
          name: # optional
          # Where to unpack the artifact
          #path: # optional, default is ./
          # Choose to skip unpacking the downloaded artifact(s)
          skip_unpack: true # optional
          # Check the existence of artifact(s) without downloading
          #dry_run: # optional
          #if_no_artifact_found: warn # optional, default is fail

      - name: List Files for Debugging
        run: |
          echo "Current working directory:"
          pwd
          echo "Listing all files and folders:"
          ls -R
      
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.version }}
          name: ${{ inputs.version }}
          body: |
            ðŸš€ New release for version ${{ inputs.version }}.          
          draft: false
          prerelease: ${{ inputs.prerelease }}

      - name: Debug Release URL
        run: echo "Release upload URL: ${{ steps.create_release.outputs.upload_url }}"
  
      - name: Upload Zipped Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ inputs.build }}
          asset_name: ${{ inputs.build }}
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
